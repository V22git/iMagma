"""

Script that combines the output files generated by ParameterSearchHEAD.py

By: Viranga Perera & Alan P. Jackson
Modified: September 19, 2017

"""

from __future__ import division
import numpy as np
import os
import os.path
import csv

UserPath = os.getcwd() + '/'          # Define path

# Create output file for combined results

columnNames = ['Run Name', 'iMagma Version', 'Run Duration (sec)', 'Volume Increments', 'Timestep Tolerance (%)', 'Impacts', \
                'Quench', 'Additional Heating', 'Largest Impactor (km)', 'Location of Moon (Re)', 'Impact Mass Conversion Factor', \
                'Magma Ocean Depth (m)', 'Plag Building Depth (m)', 'Fraction Solids to Plag', 'Percentage of Magma to Remain', \
                'Max Quench Thickness (m)', 'Density Magma Ocean (kg/m3)', 'Density Crust (kg/m3)', 'Density Quench (kg/m3)', \
                'Heat of Fusion Magma Ocean (J/kg)', 'Heat Capacity Magma Ocean (J/kg*K)', 'Heat Capacity Crust (J/kg*K)', \
                'Heat Capacity Quench (J/kg*K)', 'Thermal Expansion Coeff Magma Ocean (1/K)', 'Diffusivity Magma Ocean (m2/s)', \
                'Diffusivity Crust (m2/s)', 'Diffusivity Quench (m2/s)', 'Dynamic Viscosity Magma Ocean (Pa*s)', 'Adiabat Slope (K/m)', \
                'Temperature Quench Melt (K)', 'Temperature Surface Equl (K)', 'Emissivity', 'Initial Magma Ocean Mass (kg)', \
                'Solidified Magma Ocean Mass (kg)', 'Total Mass Added By Re-impacts (kg)', 'Total Energy Added By Re-impacts (J)', \
                'Heating Rate (W)', 'Total Additional Heat Added (J)', 'Remaining Liquid (%)', 'Plag Building Start Time (yrs)', \
                'Percentage of Surface w/ Holes', 'Total Cooling Time (yrs)', 'Final Crustal Thickness (m)']
                
# Write input file for MAIN.py as a CSV file                                                                    
with open(UserPath + 'GrandScoreCard.csv', 'w') as f:
    inputCSV = csv.writer(f, delimiter=',')
    inputCSV.writerow(columnNames)                


startDirectoryNumber = 1

# Find out how many subdirectories are there
numDirectories = len(os.walk(UserPath).next()[1])

for dirCount in range(startDirectoryNumber, numDirectories+1):
    
    workingPath = UserPath + str(dirCount) + '/'
    
    if os.path.isfile(workingPath + 'scoreCard.csv'):
    
        tempOutputData = np.genfromtxt(workingPath + 'scoreCard.csv', skip_header=0, delimiter=',')
        
        # Append output to the CSV file                                                                    
        with open(UserPath + 'GrandScoreCard.csv', 'a') as f:
            np.savetxt(f, tempOutputData.reshape(1, tempOutputData.shape[0]), delimiter=',', fmt='%.7e')
    
    if os.path.isfile(workingPath + 'errorFile.csv'):
        
        print('Error in Directory: ', dirCount)
